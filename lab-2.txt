NAME: Nistala Kameswari Shalini
VERSION: 3 on 9/29/24 at 2:57pm


USERS

POST /users/register
-> request body is an object with username and password along with dietary preferences (optional-if provided by the users)
-> responds with the created user object (excluding password) with the id
-> responds with an error if username already exists.

POST /users/login
-> request body is a username and password object
-> responds with a user object (excluding password) if login is successful
-> responds with an error if login fails

GET /users/:id
-> request header contains user_id
-> responds with a user object (excluding password) with all associated meal plans for the user
-> responds with an error if no user was found
-> responds with an error if user id and header user_id does not match

PUT /users/:id
-> request header contains user_id
-> request body is a dietary preferences object 
-> responds with the updated user object (excluding password) with the new dietary preferences.
-> responds with an error if no user object was found
-> responds with an error if user id and header user_id does not match


MEAL PLANS

POST /mealPlans
-> request header contains user_id
-> request body is a week and a meals object (week,mealId, name, diets, image) 
-> responds with the created/ updated mealPlan object including the week and the id created from the server
-> responds with an error if no user object was found or if adding the meal exceeds the limit (limit:3)
-> responds with an error if user_id in meal plan and header user_id does not match

DELETE /mealPlans/:id
-> request header contains user_id
-> responds with confirmation and id that the mealPlan object was deleted
-> responds with an error if no mealPlan object was found
-> responds with an error if user_id in meal plan and header user_id does not match

MEALS

GET /meals/search
-> request header contains user_id
-> app is able to get user preferences using the user_id in header
-> query parameters (name,preferences) example: ?name=pizza&preferences=vegan
-> responds with an array of meals objects based on the search

